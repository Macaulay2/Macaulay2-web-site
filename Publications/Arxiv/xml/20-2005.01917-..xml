<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <link href="http://arxiv.org/api/query?search_query%3D%26id_list%3D2005.01917%26start%3D0%26max_results%3D10" rel="self" type="application/atom+xml"/>
  <title type="html">ArXiv Query: search_query=&amp;id_list=2005.01917&amp;start=0&amp;max_results=10</title>
  <id>http://arxiv.org/api/hZeHM4D4keLOufALAi8PfB178r4</id>
  <updated>2020-06-02T00:00:00-04:00</updated>
  <opensearch:totalResults xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">1</opensearch:totalResults>
  <opensearch:startIndex xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">0</opensearch:startIndex>
  <opensearch:itemsPerPage xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">10</opensearch:itemsPerPage>
  <entry>
    <id>http://arxiv.org/abs/2005.01917v1</id>
    <updated>2020-05-05T02:27:00Z</updated>
    <published>2020-05-05T02:27:00Z</published>
    <title>Learning selection strategies in Buchberger's algorithm</title>
    <summary>  Studying the set of exact solutions of a system of polynomial equations
largely depends on a single iterative algorithm, known as Buchberger's
algorithm. Optimized versions of this algorithm are crucial for many computer
algebra systems (e.g., Mathematica, Maple, Sage). We introduce a new approach
to Buchberger's algorithm that uses reinforcement learning agents to perform
S-pair selection, a key step in the algorithm. We then study how the difficulty
of the problem depends on the choices of domain and distribution of
polynomials, about which little is known. Finally, we train a policy model
using proximal policy optimization (PPO) to learn S-pair selection strategies
for random systems of binomial equations. In certain domains, the trained model
outperforms state-of-the-art selection heuristics both in number of iterations
of the algorithm and total number of polynomial additions performed. These
results provide a proof-of-concept that recent developments in machine learning
have the potential to improve performance of algorithms in symbolic
computation.
</summary>
    <author>
      <name>Dylan Peifer</name>
    </author>
    <author>
      <name>Michael Stillman</name>
    </author>
    <author>
      <name>Daniel Halpern-Leistner</name>
    </author>
    <arxiv:comment xmlns:arxiv="http://arxiv.org/schemas/atom">11 pages</arxiv:comment>
    <link href="http://arxiv.org/abs/2005.01917v1" rel="alternate" type="text/html"/>
    <link title="pdf" href="http://arxiv.org/pdf/2005.01917v1" rel="related" type="application/pdf"/>
    <arxiv:primary_category xmlns:arxiv="http://arxiv.org/schemas/atom" term="cs.LG" scheme="http://arxiv.org/schemas/atom"/>
    <category term="cs.LG" scheme="http://arxiv.org/schemas/atom"/>
    <category term="cs.SC" scheme="http://arxiv.org/schemas/atom"/>
    <category term="math.AC" scheme="http://arxiv.org/schemas/atom"/>
    <category term="math.AG" scheme="http://arxiv.org/schemas/atom"/>
    <category term="stat.ML" scheme="http://arxiv.org/schemas/atom"/>
  </entry>
</feed>
