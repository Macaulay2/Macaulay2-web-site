<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <link href="http://arxiv.org/api/query?search_query%3D%26id_list%3D2202.09226%26start%3D0%26max_results%3D10" rel="self" type="application/atom+xml"/>
  <title type="html">ArXiv Query: search_query=&amp;id_list=2202.09226&amp;start=0&amp;max_results=10</title>
  <id>http://arxiv.org/api/urISOZ2OYNcYZ+5m4NjcmH7KaXM</id>
  <updated>2022-03-19T00:00:00-04:00</updated>
  <opensearch:totalResults xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">1</opensearch:totalResults>
  <opensearch:startIndex xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">0</opensearch:startIndex>
  <opensearch:itemsPerPage xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">10</opensearch:itemsPerPage>
  <entry>
    <id>http://arxiv.org/abs/2202.09226v1</id>
    <updated>2022-02-18T14:49:43Z</updated>
    <published>2022-02-18T14:49:43Z</published>
    <title>Faster change of order algorithm for Gröbner bases under shape and
  stability assumptions</title>
    <summary>  Solving polynomial systems whose solution set is finite is usually done in
two main steps: compute a Gr\"obner basis for the degree reverse lexicographic
order, and perform a change of order to find the lexicographic Gr\"obner basis.
The second step is generally considered as better understood, in terms of
algorithms and complexity. Yet, after two decades of progress on the first
step, it turns out that the change of order now takes a large part of the
solving time for many instances, including those that are generic or reached
after applying a random change of variables.
  Like the fastest known change of order algorithms, this work focuses on the
latter situation, where the ideal defined by the system satisfies structural
properties. First, the ideal has a shape lexicographic Gr\"obner basis. Second,
the set of leading terms with respect to the degree reverse lexicographic order
has a stability property; in particular, the multiplication matrix of the
smallest variable is computed for free from the input Gr\"obner basis.
  The current fastest algorithms rely on the sparsity of this multiplication
matrix to find its minimal polynomial efficiently using Wiedemann's approach.
This paper starts from the observation that this sparsity is a consequence of
an algebraic structure, which can be exploited to represent the matrix
concisely as a univariate polynomial matrix. We show that the Hermite normal
form of that matrix yields the sought lexicographic Gr\"obner basis, under
assumptions which cover the shape position case. This leads to an improved
complexity bound for the second step. The practical benefit is also confirmed
via implementations based on the state-of-the-art software libraries msolve and
PML.
</summary>
    <author>
      <name>Jérémy Berthomieu</name>
    </author>
    <author>
      <name>Vincent Neiger</name>
    </author>
    <author>
      <name>Mohab Safey El Din</name>
    </author>
    <arxiv:comment xmlns:arxiv="http://arxiv.org/schemas/atom">9 pages, 2 tables</arxiv:comment>
    <link href="http://arxiv.org/abs/2202.09226v1" rel="alternate" type="text/html"/>
    <link title="pdf" href="http://arxiv.org/pdf/2202.09226v1" rel="related" type="application/pdf"/>
    <arxiv:primary_category xmlns:arxiv="http://arxiv.org/schemas/atom" term="cs.SC" scheme="http://arxiv.org/schemas/atom"/>
    <category term="cs.SC" scheme="http://arxiv.org/schemas/atom"/>
    <category term="math.AC" scheme="http://arxiv.org/schemas/atom"/>
  </entry>
</feed>
