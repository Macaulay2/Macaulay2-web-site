<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <link href="http://arxiv.org/api/query?search_query%3D%26id_list%3D1909.01746%26start%3D0%26max_results%3D10" rel="self" type="application/atom+xml"/>
  <title type="html">ArXiv Query: search_query=&amp;id_list=1909.01746&amp;start=0&amp;max_results=10</title>
  <id>http://arxiv.org/api/jSo65kSVpwcarN2HG301I/CMDV4</id>
  <updated>2019-09-18T00:00:00-04:00</updated>
  <opensearch:totalResults xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">1</opensearch:totalResults>
  <opensearch:startIndex xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">0</opensearch:startIndex>
  <opensearch:itemsPerPage xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/">10</opensearch:itemsPerPage>
  <entry>
    <id>http://arxiv.org/abs/1909.01746v1</id>
    <updated>2019-09-04T12:49:08Z</updated>
    <published>2019-09-04T12:49:08Z</published>
    <title>Gröbner Bases with Reduction Machines</title>
    <summary>  In this paper, we make a contribution to the computation of Gr\"obner bases.
For polynomial reduction, instead of choosing the leading monomial of a
polynomial as the monomial with respect to which the reduction process is
carried out, we investigate what happens if we make that choice arbitrarily. It
turns out not only this is possible (the fact that this produces a normal form
being already known in the literature), but, for a fixed choice of reductors,
the obtained normal form is the same no matter the order in which we reduce the
monomials. To prove this, we introduce reduction machines, which work by
reducing each monomial independently and then collecting the result. We show
that such a machine can simulate any such reduction. We then discuss different
implementations of these machines. Some of these implementations address
inherent inefficiencies in reduction machines (repeating the same
computations). We describe a first implementation and look at some experimental
results.
</summary>
    <author>
      <name>Georgiana Şurlea</name>
      <arxiv:affiliation xmlns:arxiv="http://arxiv.org/schemas/atom">Department of Computer Science, West University. Timişoara, Romania</arxiv:affiliation>
    </author>
    <author>
      <name>Adrian Crăciun</name>
      <arxiv:affiliation xmlns:arxiv="http://arxiv.org/schemas/atom">Department of Computer Science, West University. Timişoara, Romania</arxiv:affiliation>
    </author>
    <arxiv:doi xmlns:arxiv="http://arxiv.org/schemas/atom">10.4204/EPTCS.303.5</arxiv:doi>
    <link title="doi" href="http://dx.doi.org/10.4204/EPTCS.303.5" rel="related"/>
    <arxiv:comment xmlns:arxiv="http://arxiv.org/schemas/atom">In Proceedings FROM 2019, arXiv:1909.00584</arxiv:comment>
    <arxiv:journal_ref xmlns:arxiv="http://arxiv.org/schemas/atom">EPTCS 303, 2019, pp. 61-75</arxiv:journal_ref>
    <link href="http://arxiv.org/abs/1909.01746v1" rel="alternate" type="text/html"/>
    <link title="pdf" href="http://arxiv.org/pdf/1909.01746v1" rel="related" type="application/pdf"/>
    <arxiv:primary_category xmlns:arxiv="http://arxiv.org/schemas/atom" term="cs.SC" scheme="http://arxiv.org/schemas/atom"/>
    <category term="cs.SC" scheme="http://arxiv.org/schemas/atom"/>
  </entry>
</feed>
