#! /bin/bash

set -u
umask 02
shopt -s dotglob

export PATH=/home/html/www/Macaulay2/bin:$PATH

thisprog="$0"
FILTER=false
SHADOW=false
DESCEND=true
SIZE=true
DATE=true
OPTIONS=
# TRAILER=$HOME/to/Macaulay2/Style/trailer.html
TRAILER=
TITLE=
shopt -s nullglob dotglob

INDEXFN=index.html

if type shopt > /dev/null
then : # we are probably running bash
else exec bash "$0" "$@"
     exit 1
fi

function filesize () {
    if [ -f "$1" ]
    then wc -c <"$1" | sed 's/  *//'
    fi
    }

function echon () {
    echo -n "$@"
}

function item () {

    FILENAME="$filename"

    LINKNAME=$FILENAME
    SYMBNAME=

    if [ -h "$FILENAME" ]
    then SYMBNAME=$FILENAME
    	 FILENAME=$(readlink "$FILENAME")
    fi

    if [ -d "$FILENAME" ]
    then FILENAME="$FILENAME/"
	 LINKNAME="$LINKNAME/$INDEXFN"
    fi

    echon "<li>"

    if [ "$SYMBNAME" ]
    then echon "<a href="$SYMBNAME">$SYMBNAME</a> --> "
    fi

    echon " <a href=\""$(echo "$LINKNAME" | sed 's/%/%25/g')"\">"

    thumbnail=`basename "$FILENAME" .jpg`-200.jpg

    if [ -f "$thumbnail" ]
    then echon "<img src=\"$thumbnail\" alt=\"thumbnail\">"
    fi

    echon "$FILENAME" | unpercent

    echon "</a>"

    if [ -f "$FILENAME".comment ]
    then echon " -- "
	 echon $(cat "$FILENAME".comment)
    fi

    $SIZE && [ -f "$FILENAME" ] && echon ", "$(filesize "$FILENAME")" bytes"
    $DATE && [ -f "$FILENAME" ] && echon ", "$(filedate "$FILENAME")

    if [ -f "$FILENAME" -a -f "$FILENAME".sig -a "$FILENAME".sig -nt "$FILENAME" ]
    then echon ", <a href=\"$FILENAME.sig\">.sig</a>"
    fi

    echo "</li>"

    if $DESCEND && [ -d "$filename" -a -w "$filename" -a ! -f "$filename.local" -a ! -h "$filename" ]
    then (cd "$FILENAME" && "$thisprog" $OPTIONS) || exit 1
    fi

    }

if ! $FILTER && [ `umask` != 0002 ]
then echo "warning: umask set to `umask`" >&2
fi

while [ $# -gt 0 ]
do case "$1" in 
      --help)
            echo "usage: $0 [OPTION]..." >&1
            echo "     --help	         display this usage message" >&1
            echo "     -f TITLE          filter stdin to stdout, read no files" >&1
            echo "     -l                do not descend into subdirectories" >&1
            echo "     -s                do not display sizes of files in menu" >&1
            echo "     -d                do not display dates of files in menu" >&1
	    echo "     -o FILENAME       filename of index file, default: index.html" >&1
            echo "     -t FILENAME       filename of trailer" >&1
            echo "     --shadow          create index-shadow.html instead of index.html" >&1
	    ;;
      -f)   FILTER=true; 
	    TITLE="$2";
	    if ! [ "$TITLE" ]
	    then echo $(basename "$0"): error: -f specified but no title given >&2
		 exit 1
	    fi
	    shift ;;
      -l) DESCEND=false; OPTIONS="$OPTIONS $1" ;;
      -s) SIZE=false; OPTIONS="$OPTIONS $1" ;;
      -d) DATE=false; OPTIONS="$OPTIONS $1" ;;
      -t) TRAILER=$2; OPTIONS="$OPTIONS $1 $2"; shift ;;
      -o) INDEXFN=$2; OPTIONS="$OPTIONS $1 $2"; shift ;;
      --shadow) SHADOW=true; INDEXFN=index-shadow.html; OPTIONS="$OPTIONS $1" ;;
      *)  echo $(basename "$0"): error: unrecognized option "$1" >&2
	  exit 1 ;;
   esac
   shift
done

if ! $FILTER
then if [ -f $INDEXFN ]
     then if ! grep -q "generated by index-" $INDEXFN
	  then echo $(basename "$0"): "warning: $INDEXFN already present in $(pwd), not replacing" >&2
	  exit
	  fi
     fi

     rm -f $INDEXFN.tmp
     exec >$INDEXFN.tmp

    if [ -f .title ]
    then TITLE=$(cat .title)
    else TITLE=$(basename "$(/bin/pwd)" | unpercent)
    fi

fi

cat <<EOF
<?xml version="1.0" encoding="utf-8"?> <!-- -*- coding: utf-8 -*- -->
<!-- generated by $(basename $thisprog) -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <!--
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
    -->
  <title>$TITLE</title>
  <script type="text/javascript" src="/Macaulay2/Scripts/citation-table.js"></script>
  <script type="text/javascript" src="/Macaulay2/Scripts/documentation-table.js"></script>
  <link rel="shortcut icon" href="/Macaulay2/Style/icon.gif" type="image/x-icon" >
  <link rel="icon" href="/Macaulay2/Style/icon.gif" type="image/x-icon" >
EOF

echo '  <link rel="stylesheet" type="text/css" href="/Style/index.css">'
echo '  <link rel="stylesheet" type="text/css" href="/Style/extra.css">'

if [ -f local.css ]
then echo '  <link rel="stylesheet" type="text/css" href="local.css">'
fi

if ! $FILTER && [ -f HEAD.html ]
then echo "<!-- imported from HEAD.html -->"
     cat HEAD.html
     echo "<!-- end of import from HEAD.html -->"
fi

TITLE=`echo "$TITLE" | sed -e 's=Macaulay ?2=<i>Macaulay2</i>=g'`

cat <<EOF
</head>

<body>
 <div id="content">
  <h1>$TITLE</h1>
EOF

if $FILTER
then
    cat
else
    if [ -f README ] && ! $SHADOW
    then echo "<pre>"
	 sed  -e 's/&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g' <README
	 echo "</pre>"
    fi

    if [ -f README.html ] && ! $SHADOW
    then echo "<!-- imported from README.html -->"
	 cat README.html
	 echo "<!-- end of import from README.html -->"
    fi
fi

if $SHADOW
then set - \
	 -name $INDEXFN.tmp
else set - \
	 -name $INDEXFN -o  \
	 -name index-shadow.html -o  \
	 -name index.css -o  \
	 -name index.html -o  \
	 -name icon.gif -o  \
	 -name \*-pre.html -o  \
	 -name \*~ -o  \
	 -name .#\* -o  \
	 -name .htaccess -o  \
	 -name .cvsignore -o  \
	 -name \*.log -o  \
	 -name \*.tmp -o  \
	 -name .htpasswd -o  \
	 -name Makefile -o  \
	 -name .svn -o  \
	 -name \*.ignore -o  \
	 -name \*.new-ignore -o  \
	 -name \*.local -o  \
	 -name \*.comment -o  \
	 -name \*.toc -o  \
	 -name \*.aux -o  \
	 -name README -o  \
	 -name README\*.html -o  \
	 -name HEAD.html -o  \
	 -name \*-200.jpg -o  \
	 -name .nfs\* -o  \
	 -name .title -o  \
	 -name \*.sig -o  \
	 -name .gitignore -o  \
	 -name FOOTER\*.html -o  \
	 -name local.css
fi

if ! $FILTER && ( $SHADOW || [ ! -f .ignore ] )
then for predicate in "! -type d" "-type d"
     do find * -prune -perm -4 $predicate -a ! '(' "$@" ')' | vsort | (
	    haditem=no
	    while read filename
	    do case "$filename" in
		   * ) if $SHADOW || [ ! -f "$filename".ignore -a ! -f "$filename"/.ignore ]
		       then if [ "$haditem" = "no" ]
			    then echo '<div class="file_list">'
				 echo '<ul>'
			    fi
			    item || exit 1
    			    haditem=yes
		       fi ;;
	       esac
	    done
	    if [ "$haditem" = "yes" ]
	    then echo " </ul>"
		 echo " </div>"
	    fi
            )
     done
fi

if ! $FILTER && [ -f FOOTER.html ] && ! $SHADOW
then echo "<!-- imported from FOOTER.html -->"
     cat FOOTER.html
     echo "<!-- end of import from FOOTER.html -->"
fi

echo " </div>"

if [ "$TRAILER" ] && ! $SHADOW
then echo "<!-- imported from $TRAILER -->"
     cat "$TRAILER" || exit 1
     echo "<!-- end of import from $TRAILER -->"
fi

cat <<EOF
</body>
</html>
EOF

if ! $FILTER
then 
     # chmod a+r,a-w $INDEXFN.tmp
     chmod a+r $INDEXFN.tmp
     if [ -f $INDEXFN ]
     then chmod u+w $INDEXFN || rm -f $INDEXFN
     fi
     mv $INDEXFN.tmp $INDEXFN
     echo $(basename "$0"): "created $(/bin/pwd)/$INDEXFN" >&2
fi
